{% extends 'base.html.twig' %}

{% block title %}Hello FandomController!{% endblock %}

{% block body %}
    <style>
        .user-changeAvatar__container {
            display: flex;
            justify-content: flex-start;
            align-items: center;
            width: 100%;
            padding: 20px;
            background-color: #ccc;
            margin-left: 6px;
        }

        .page-wrapper {
            display: grid;
            grid-template-columns: 0.5fr 1.5fr;
            grid-template-rows: 1fr;
            gap: 150px 0px;
            grid-template-areas:
    ". .";
        }
    </style>
    <div class="page-wrapper">
        {{ include('layouts/userSettings.html.twig') }}
        <div class="user-changeAvatar__container">
            {{ form_start(form) }}
            {{ form_row(form.image, { 'attr':{'id':'imageInput'} }) }}
            <div>
                <p>Предпоказ</p>
                <img src="
        {% if prevImageName is defined and prevImageName is not null %}
         {{ asset('uploads/') }}{{ prevImageName }}
        {% else %}
       {{ asset('images/defaultBanner.png') }}
        {% endif %}"
                     id="imagePreview" data-userId= {{ app.user.id }} height="100px">
            </div>
            {{ form_row(form.save) }}
            <button id="test">test</button>
            {{ form_end(form) }}
        </div>
    </div>
{% endblock %}



{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">

        window.onload = function () {
            const element = document.getElementById('form_image');
            element.addEventListener('change', async (event) => {
                await window.imageModule.readUrl(event.target)
                $('#imagePreview').cropper({
                    aspectRatio: 16 / 9,
                });
            })

            const btn = document.getElementById('test');
            btn.addEventListener('click', (event) => {
                event.preventDefault()
                const cropper = $('#imagePreview').data('cropper');
                const canvas = cropper.getCroppedCanvas({
                    width: 400,
                    height: 400
                });
                canvas.toBlob(function (blob) {
                    const id = $($('*[data-userId]')[0]).attr('data-userId');
                    console.log(id)
                    const url = URL.createObjectURL(blob);
                    const reader = new FileReader();
                    reader.readAsDataURL(blob);
                    reader.onloadend = function () {
                        var base64data = reader.result;
                        console.log(base64data)
                        $.ajax({
                            url: `/user/avatar/${id}`,
                            method: 'POST',
                            data: {image: base64data},
                            success: function (data) {
                                console.log('success')
                            }
                        });
                    };
                });
            })


        }


    </script>
{% endblock %}
