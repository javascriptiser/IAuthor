{% extends 'base.html.twig' %}

{% block title %}Hello FandomController!{% endblock %}

{% block body %}
    <style>
        .user-changeAvatar__container {
            display: flex;
            justify-content: flex-start;
            align-items: center;;
            padding: 20px;
            background-color: var(--story-background-color)
            margin-left: 6px;
        }

        .preview_container {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            width: 100%;
            margin-bottom: 10px;

        }

        .avatarForm {
            width: 100%;
        }
        button{
            width: 100%;
        }
        .page-wrapper {
            display: grid;
            grid-template-columns: 0.8fr 1.5fr;
            grid-template-rows: 1fr;
            gap: 150px 0px;
            grid-template-areas:
    ". .";
        }
    </style>
    <div class="page-wrapper">
        {{ include('layouts/userSettings.html.twig') }}
        <div class="user-changeAvatar__container">
            {{ form_start(form,{'attr':{'class':'avatarForm'}}) }}
            {{ form_row(form.image, { 'attr':{'id':'imageInput'} }) }}
            <p>Предпоказ</p>
            <div class="preview_container">
                <img src="
        {% if prevImageName is defined and prevImageName is not null %}
         {{ asset('uploads/') }}{{ prevImageName }}
        {% else %}
       {{ asset('images/defaultBanner.png') }}
        {% endif %}"
                     id="imagePreview" data-userId= {{ app.user.id }} height="100px">
                <p>Так будет выглядеть на сайте</p>
                <div class="preview">

                </div>
            </div>
            <button id="test" class="btn btn-success">Загрузить</button>
            {{ form_end(form) }}
        </div>

    </div>
{% endblock %}



{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">

        window.onload = function () {
            const element = document.getElementById('form_image');
            element.addEventListener('change', async (event) => {
                await window.imageModule.readUrl(event.target)
                $('#imagePreview').cropper('destroy');
                window.imageModule.init();
            })
            window.imageModule.init();


            const btn = document.getElementById('test');
            btn.addEventListener('click', (event) => {
                event.preventDefault()
                const cropper = $('#imagePreview').data('cropper');
                const canvas = cropper.getCroppedCanvas({
                    width: 400,
                    height: 400
                });
                canvas.toBlob(function (blob) {
                    const id = $($('*[data-userId]')[0]).attr('data-userId');
                    const url = URL.createObjectURL(blob);
                    const reader = new FileReader();
                    reader.readAsDataURL(blob);
                    reader.onloadend = function () {
                        var base64data = reader.result;
                        $.ajax({
                            url: `/user/avatar/${id}`,
                            method: 'POST',
                            data: {image: base64data},
                            success: function (data) {
                                window.location.replace(`/user/${id}`);
                            }
                        });
                    };
                });
            })
        }


    </script>
{% endblock %}
